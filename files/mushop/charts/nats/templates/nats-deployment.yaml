apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nats.fullname" . }}
  annotations:
    avesha.io/slice: mu
  labels:
{{ include "nats.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      app.kubernetes.io/name: {{ include "nats.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      run: {{ include "nats.name" . }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        version: {{ .Values.image.tag | quote }}
        app.kubernetes.io/name: {{ include "nats.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        run: {{ include "nats.name" . }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "7777"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: client
              containerPort: 4222
              protocol: TCP
            - name: routes
              containerPort: 6222
              protocol: TCP
            - name: monitoring
              containerPort: 8222
              protocol: TCP
        - name: {{ .Chart.Name }}-exporter
          image: "{{ .Values.exporter.repository }}:{{ .Values.exporter.tag }}"
          imagePullPolicy: {{ .Values.exporter.pullPolicy }}
          ports:
            - name: http
              containerPort: 7777
          args:
            - -D 
            - -varz 
            - -channelz
            - -connz
            - -serverz
            - -subz
            - -gatewayz
            - "http://localhost:8222"
          
